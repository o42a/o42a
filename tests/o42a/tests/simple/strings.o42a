~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Any copyright is dedicated to the Public Domain.
http://creativecommons.org/publicdomain/zero/1.0/
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use namespace 'Console'
Use namespace 'Test'

Strings := test
===============

Name = "Strings"

Print error '  ' [name] nl
Run tests

Input := test (
  Name = "Input"
  Print error '    ' [name] nl

  Assert [rt-string ''] "Empty string input is false"
  Assert [rt-string 'abc'] "String input is false"
)

Length := test (
  Name = "Length"
  Print error '    ' [name] nl

  Assert [rt-string '': length == 0] "Wrong empty string length"
  Assert [rt-string 'abc': length == 3] "Wrong string length"
)

Equality := test (
  Name = "Equality"
  Print error '    ' [name] nl

  Assert [rt-string '' == ""] "Empty strings not equal"
  Assert [rt-string 'abc' == "abc"] "Short strings equality failed"
  Assert [rt-string 'Hello, World!' == "Hello, World!"] "Strings equality failed"
  Assert [--(rt-string 'abc' == "c")] "Non-equal strings are equal"
)

Non-equality := test (
  Name = "Non-equality"
  Print error '    ' [name] nl

  Assert [rt-string 'abc' <> "b"] "Strings non-equality failed"
  Assert [--(rt-string 'abc' <> "abc")] "Equal strings are not equal"
)

Less := test (
  Name = "Less"
  Print error '    ' [name] nl

  Assert [rt-string 'a' < "ab"] "Shorter string is not less"
  Assert [rt-string 'a' < "b"] "String is not less"
  Assert [--(rt-string 'b' < "a")] "String is less"
  Assert [--(rt-string 'a' < "a")] "String is less than itself"
)

Less or equal := test (
  Name = "Less or equal"
  Print error '    ' [name] nl

  Assert [rt-string 'a' <= "ab"] "Shorter string is not less or equal"
  Assert [rt-string 'a' <= "a"] "String is not less or equal than itself"
  Assert [rt-string 'a' <= "b"] "String is not less or equal"
  Assert [--(rt-string 'b' <= "a")] "String is less or equal"
)

Greater := test (
  Name = "Greater"
  Print error '    ' [name] nl

  Assert [rt-string 'ab' > "a"] "Longer string is not greater"
  Assert [rt-string 'b' > "a"] "String is not greater"
  Assert [--(rt-string 'a' > "b")] "String is greater"
  Assert [--(rt-string 'a' > "a")] "String is greater than itself"
)

Greater or equal := test (
  Name = "Greater or equal"
  Print error '    ' [name] nl

  Assert [rt-string 'ab' >= "a"] "Longer string is not greater or equal"
  Assert [rt-string 'a' >= "a"] "String is not greater or equal than itself"
  Assert [rt-string 'b' >= "a"] "String is not greater or equal"
  Assert [--(rt-string 'a' >= "b")] "String is greater or equal"
)

Char := test (
  Name = "Char"
  Print error '    ' [name] nl

  Assert [rt-string 'abc' [1] == "b"] "Wrong char #1"
  Assert [rt-string 'abc' [0] == "a"] "Wrong first char"
  Assert [rt-string 'abc' [2] == "c"] "Wrong last char"
  Assert [--rt-string 'abc' [-1]] "Char at negative index"
  Assert [--rt-string 'abc' [3]] "Char at invalid index"
)
