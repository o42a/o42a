/*
    Tests
    Copyright (C) 2011,2012 Ruslan Lopatin

    This file is part of o42a.

    o42a is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    o42a is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
Use namespace 'Console'
Use namespace 'Test'


Strings := test
===============

Name = "Strings"

Print error '  ' [name] nl
Run tests

Input := test (
  Name = "Input"
  Print error '    ' [name] nl

  Assert [rt-string ''] "Empty string input is false"
  Assert [rt-string 'abc'] "String input is false"
)

Length := test (
  Name = "Length"
  Print error '    ' [name] nl

  Assert [rt-string '': length == 0] "Wrong empty string length"
  Assert [rt-string 'abc': length == 3] "Wrong string length"
)

Equality := test (
  Name = "Equality"
  Print error '    ' [name] nl

  Assert [rt-string '' == ""] "Empty strings not equal"
  Assert [rt-string 'abc' == "abc"] "Short strings equality failed"
  Assert [rt-string 'Hello, World!' == "Hello, World!"] "Strings equality failed"
  Assert [--(rt-string 'abc' == "c")] "Non-equal strings are equal"
)

Non-equality := test (
  Name = "Non-Equality"
  Print error '    ' [name] nl

  Assert [rt-string 'abc' <> "b"] "Strings non-equality failed"
  Assert [--(rt-string 'abc' <> "abc")] "Equal strings are not equal"
)

Less := test (
  Name = "Less"
  Print error '    ' [name] nl

  Assert [rt-string 'a' < "ab"] "Shorter string is not less"
  Assert [rt-string 'a' < "b"] "String is not less"
  Assert [--(rt-string 'b' < "a")] "String is less"
  Assert [--(rt-string 'a' < "a")] "String is less than itself"
)

Less or equal := test (
  Name = "Less or Equal"
  Print error '    ' [name] nl

  Assert [rt-string 'a' <= "ab"] "Shorter string is not less or equal"
  Assert [rt-string 'a' <= "a"] "String is not less or equal than itself"
  Assert [rt-string 'a' <= "b"] "String is not less or equal"
  Assert [--(rt-string 'b' <= "a")] "String is less or equal"
)

Greater := test (
  Name = "Greater"
  Print error '    ' [name] nl

  Assert [rt-string 'ab' > "a"] "Longer string is not greater"
  Assert [rt-string 'b' > "a"] "String is not greater"
  Assert [--(rt-string 'a' > "b")] "String is greater"
  Assert [--(rt-string 'a' > "a")] "String is greater than itself"
)

Greater or equal := test (
  Name = "Greater or Equal"
  Print error '    ' [name] nl

  Assert [rt-string 'ab' >= "a"] "Longer string is not greater or equal"
  Assert [rt-string 'a' >= "a"] "String is not greater or equal than itself"
  Assert [rt-string 'b' >= "a"] "String is not greater or equal"
  Assert [--(rt-string 'a' >= "b")] "String is greater or equal"
)

Char := test (
  Name = "Char"
  Print error '    ' [name] nl

  Assert [(rt-string 'abc')[1] == "b"] "Wrong char #1"
  Assert [rt-string 'abc': char[0] == "a"] "Wrong first char"
  Assert [rt-string 'abc': char[2] == "c"] "Wrong last char"
  Assert [--rt-string 'abc': char[-1]] "Char at negative index"
  Assert [--rt-string 'abc': char[3]] "Char at invalid index"
)
