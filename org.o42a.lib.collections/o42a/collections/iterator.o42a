~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Copyright (C) 2012 Ruslan Lopatin

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Iterator :=> void
=================
~~~
Iterator over a sequence.
~~~

Element type := void ~~ The type of iterated elements.
###

Next :=< link (`#element type)
~~~
Returns the next element of the sequence on each value request.

Results to false if no more elements left to iterate over.
~~~

For each :=> void (
  ~~~
  Performs the given action for each element left to iterate.
  ~~~
  Do :=> void (
    ~~~
    An action to perform for each iterated element.

    This prototype is inherited for each element and then it's value taken.
    If the value is false, the iteration is over.
    ~~~

    It :=< link (`#element type)
    ~~~
    A link to the current element of iterator to perform the action for.
    ~~~ 
  )

  {
    Next item := `//next
    Do (It = next item)... 
  }

  <{Action}!> Do => *
  ~~~
  An imperative `for each` phrase constructor.
  ~~~
)
