~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Collections Library
Copyright (C) 2012 Ruslan Lopatin

This file is part of o42a.

o42a is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation, either version 3
of the License, or (at your option) any later version.

o42a is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Iterator :=> void
=================
~~~
Iterator over a sequence.
~~~

Next :=< link`
~~~
Returns the next element of the sequence on each value request.

Results to false if no more elements left to iterate over.
~~~

For each :=> void (
~~~
Perfroms the given action for each element left to iterate.
~~~
  Do :=> void (
  ~~~
  An action to perform for each iterated element.

  This prototype is inherited for each element and then it's value taken. If the
  value is false, the iteration is over.
  ~~~
    It :=< Iterator:: next`
    ~~~
    A link to the current element of iterator to perform the action for.
    ~~~ 
  )
  {
    Next item := `//next
    Do (It = next item)... 
  }

  <{Action}!> Do = *
  ~~~
  A imperative `for each` phrase constructor.
  ~~~
)
