~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Intrinsics
Copyright (C) 2010-2012 Ruslan Lopatin

This file is part of o42a.

o42a is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

o42a is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Plus :=> void
~~~~~~~~~~~~~
Clause identifier of unary plus (`+`) operator.
~~~

Minus :=> void
~~~~~~~~~~~~~~
Clause identifier of unary minus (`-`) operator.
~~~

Operand :=> void
~~~~~~~~~~~~~~~~
Clause identifier representing the right operand of binary operators.

The right operand is represented by binary operator's clause itself.
~~~ 

Add :=> void
~~~~~~~~~~~~
Clause identifier of addition (`+`) operator.
~~~

Subtract :=> void
~~~~~~~~~~~~~~~~~
Clause identifier of subtraction (`-`) operator.
~~~

Multiply :=> void
~~~~~~~~~~~~~~~~~
Clause identifier of multiplication (`*`) operator.
~~~

Divide :=> void
~~~~~~~~~~~~~~~
Clause identifier of division (`/`) operator.
~~~

Equals :=> void
~~~~~~~~~~~~~~~
Clause identifier of equality check operators.

The phrase result should be true if this clause content equals to operand.

Both equals (`==`) and not equals (`<>`) operators implemented by this clause.
~~~

Compare :=> void
~~~~~~~~~~~~~~~~
Clause identifier of comparison operators.

The phrase should be integer. It's value interpreted as following:
  - negative value if clause content is less than operand;
  - positive value if clause content is greater than parameter;
  - zero if clause content equals to operand.

Less (`<`), less or equal (`<=`), greater (`>`) and greater or equal (`>=`)
operators implemented by this clause. Also, this clause implements equals
(`==`) and not equals (`<>`) operators, unless the equals clause present.
~~~

Assign :=> void
~~~~~~~~~~~~~~~
Clause identifier of assignment statement.

Meaningful only for getters.
~~~
