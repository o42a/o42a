/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_o42a_backend_llvm_code_op_LLVMIntOp */

#ifndef _Included_org_o42a_backend_llvm_code_op_LLVMIntOp
#define _Included_org_o42a_backend_llvm_code_op_LLVMIntOp
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    shl
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_shl
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    lshr
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_lshr
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    ashr
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_ashr
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    and
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_and
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    or
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_or
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    xor
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_xor
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    neg
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_neg
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    add
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_add
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    sub
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_sub
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    mul
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_mul
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    div
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_div
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    rem
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_rem
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    eq
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_eq
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    ne
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_ne
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    gt
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_gt
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    ge
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_ge
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    lt
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_lt
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    le
 * Signature: (JLjava/lang/String;JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_le
  (JNIEnv *, jclass, jlong, jstring, jlong, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    int2int
 * Signature: (JLjava/lang/String;JB)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_int2int
  (JNIEnv *, jclass, jlong, jstring, jlong, jbyte);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    intToFp32
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_intToFp32
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    intToFp64
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_intToFp64
  (JNIEnv *, jclass, jlong, jstring, jlong);

/*
 * Class:     org_o42a_backend_llvm_code_op_LLVMIntOp
 * Method:    lowestBit
 * Signature: (JLjava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_org_o42a_backend_llvm_code_op_LLVMIntOp_lowestBit
  (JNIEnv *, jclass, jlong, jstring, jlong);

#ifdef __cplusplus
}
#endif
#endif
