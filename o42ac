#!/bin/bash
#
# o42a Compiler
#

set -o pipefail

blue=$'\033[1;34m'
green=$'\033[0;32m'
red=$'\033[0;31m'
white=$'\033[1;37m'

O42A_RELEASE="0.1.3"
JAR_DIR=${JAR_DIR:-"$(dirname $0)/target"}
LIB_DIR=${LIB_DIR:-"$(dirname $0)/target"}
DEBUG_LDFLAGS=${DEBUG_LDFLAGS:-"-l:${LIB_DIR}/libo42a_debug.so"}
PROD_LDFLAGS=${PROD_LDFLAGS:-"-l:${LIB_DIR}/libo42a.so"}
JAR=${JAR:-"${JAR_DIR}/org.o42a.cl-${O42A_RELEASE}.jar"}
JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH:-"$(dirname $0)/target"}
JAVA=${JAVA:-java}
CC=${CC:-gcc}
ICU_CONFIG=${ICU_CONFIG:-icu-config}

pipe_if_not_empty () {
	head=$(dd bs=1 count=1 2>/dev/null; echo a)
	head=${head%a}
	if [ "x$head" != x"" ]; then
		{ printf %s "$head"; cat; } | "$@"
	fi
}

arg_is_true() {
	case "${1,,}" in
	true) echo 1;;
	1) echo 1;;
	*) echo 0;;
	esac
	return
}

arg_name() {
	arg="${1#-}"
	echo "${arg#-}"
}

call_o42ac () {
	${JAVA} "${vm_args[@]}" -jar "${JAR}" "${o42ac_args[@]}"
	error=$?
	if (( error != 0 )); then
		if (( error > 3 )); then
			echo "${red}ERROR${white}[${blue}${error}${white}]: o42ac failed." >&2;
		fi
		exit $error 
	fi
}

o42ac_args=()
vm_args=(-Djava.library.path="${JAVA_LIBRARY_PATH}")
cc_args=(-Xlinker --no-undefined)
append_arg="o42ac"
nopipe=0
rt_debug=0
rt_debug_follows=0

for arg in "$@"; do
	case "${arg}" in
	--) append_arg="cc";;
	--vmargs) append_arg="vm";;
	--nocolor)
		blue=""
		green=""
		red=""
		white="";;
	*)
		case "${append_arg}" in
		cc) cc_args[${#cc_args[*]}]="${arg}";;
		vm) vm_args[${#vm_args[*]}]="${arg}";;
		*)
			o42ac_args[${#o42ac_args[*]}]="${arg}"
			if ((rt_debug_follows)); then
				rt_debug=$(arg_is_true "${arg}")
				rt_debug_follows=0
			fi
			argn=$(arg_name "${arg}")
			if [ "${arg}" != "${argn}" ]; then
				case "${argn}" in
				rt-debug=*) rt_debug=$(arg_is_true "${argn#rt-debug=}");; 
				rt-debug) rt_debug_follows=1;;
				o*) nopipe=1;;
				format=*) nopipe=1;;
				format) nopipe=1;;
				esac
			fi;;
		esac;;
	esac
done

if ((nopipe)); then
	call_o42ac
	exit 0
fi

cc_args=(-x assembler - "${cc_args[@]}")
o42ac_args=("${o42ac_args[@]}" -format s -o /dev/fd/5)

if ((rt_debug)); then
	LDFLAGS="${DEBUG_LDFLAGS}"
else
	LDFLAGS="${PROD_LDFLAGS}"
fi

{
	{
		call_o42ac > /dev/fd/6
	} 5>&1 | pipe_if_not_empty ${CC} "${cc_args[@]}" ${LDFLAGS} >&6
} 6>&1
